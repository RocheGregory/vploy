# Create AWX Users
- name: Initialize AWX - Generate vploy awx password
  set_fact:
    vploy_awx_pwd: "{{ lookup('password', '/dev/null length=25 chars=ascii_letters') }}"

- name: Initialize AWX - Create vPloy Tower User
  tower_user:
    username: vploy
    password: "{{ vploy_awx_pwd }}"
    email: vploy@example.org
    superuser: true
    state: present
    tower_config_file: "../generated/tower_cli.cfg"

# Manage credentials
- name: Initialize AWX - Add vPloy AWX user in Credentials
  tower_credential:
    name: vploy-awx
    description: Vploy AWX
    organization: Default
    kind: tower
    validate_certs: false
    host: "http://{{ network.public_ip | ipaddr('address') }}"
    username: vploy
    password: "{{ vploy_awx_pwd }}"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"

- name: Initialize AWX - Add vCenter user in Credentials
  tower_credential:
    name: "{{ vsphere.address }}"
    description: "Credential for the vCenter {{ vsphere.address }}"
    organization: Default
    kind: vmware
    host: "{{ vsphere.address }}"
    username: "{{ vsphere.username }}"
    password: "{{ password.vsphere }}"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"

- name: Initialize AWX - Add SCM Credentials
  tower_credential:
    name: "SCM"
    description: "Key to access to a scm"
    organization: "Default"
    kind: scm
    username: "{{awx.scm.user}}"
    ssh_key_data: "{{ lookup('file', '../generated/keys/ansible') }}"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"

- name: Initialize AWX - Add Ansible Machine Credential
  tower_credential:
    name: "Ansible-SSH-Key"
    description: "Key to access to servers manage by ansible"
    organization: "Default"
    kind: ssh
    username: ansible
    ssh_key_data: "{{ lookup('file', '../generated/keys/ansible') }}"
    become_username: "root"
    become_password: "{{ password.template }}"
    become_method: sudo
    state: present
    tower_config_file: "../generated/tower_cli.cfg"

- name: Initialize AWX - Add Bastion Machine Credential
  tower_credential:
    name: "Bastion-SSH-Key"
    description: "Key used by the bastion to access the machine"
    organization: "Default"
    kind: ssh
    username: bastion
    ssh_key_data: "{{ lookup('file', '../generated/keys/bastion') }}"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"

# Manage Projects
- name: Initialize AWX - Add vPloy Project
  tower_project:
    name: "vPloy"
    description: "Project vPloy"
    organization: "Default"
    scm_branch: master
    scm_clean: yes
    scm_credential: "SCM"
    scm_type: "{{awx.scm.type}}"
    scm_update_on_launch: yes
    scm_url: "{{awx.scm.url}}"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
  register: vploy_project

- name: Initialize AWX - Wait for SCM Pull
  pause:
    seconds: 30
  when: vploy_project.changed

# Manage Inventory
- name: Initialize AWX - Create vPloy inventory
  tower_inventory:
    name: "vPloy"
    description: "vPloy inventory"
    organization: "Default"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"

- name: "Initialize AWX - Create {{ vsphere.address | replace('.','-') }} group"
  tower_group:
    name: "{{ vsphere.address | replace('.','-') }}"
    description: "Regroup Server part of {{ vsphere.address }} infrastructure"
    inventory: "vPloy"
    variables: "@../config/infra/vsphere.yml"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
  register: group_vsphere

- name: "AWX {{ infra_name }} - Create {{ infra_name }} group"
  tower_group:
    name: "{{ infra_name }}"
    description: "{{ infra_name }} Infrastructure"
    inventory: "vPloy"
    variables: 
      network: "{{ network }}"
      dns: "{{ dns }}"
      locale: "{{ locale }}"
      bastion:
        ip: "{{ network.private_range | ipaddr('address') | ipmath(1) }}"
        pubkey: "{{ lookup('file', '../generated/keys/bastion.pub') }}"
      extras: "{{ extras }}"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
  register: group_infra

- name: "AWX {{ infra_name }} - Create Gateway group"
  tower_group:
    name: "gateway"
    description: "Regroup Gateway Servers"
    inventory: "vPloy"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
  register: group_gateway

- name: "AWX {{ infra_name }} - Create Bastion group"
  tower_group:
    name: "bastion"
    description: "Regroup Bastion Servers"
    inventory: "vPloy"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
  register: group_bastion

- name: "AWX {{ infra_name }} - Create AWX group"
  tower_group:
    name: "awx"
    description: "Regroup Awx Servers"
    inventory: "vPloy"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
  register: group_awx

# Add Management Host in AWX
- name: "AWX {{ infra_name }} - Add Gateway server"
  tower_host:
    name: "gateway.{{ infra_name }}"
    description: "Gateway Management"
    inventory: "vPloy"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
    variables: 
        ansible_host: "{{ network.private_range | ipaddr('address') | ipmath(0) }}"
        ansible_port: "22"
  register: host_gateway

- name: "AWX {{ infra_name }} - Add Bastion server"
  tower_host:
    name: "bastion.{{ infra_name }}"
    description: "bastion Management"
    inventory: "vPloy"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
    variables: 
        ansible_host: "{{ network.private_range | ipaddr('address') | ipmath(1) }}"
        ansible_port: "22"
  register: host_bastion

- name: "AWX {{ infra_name }} - Add AWX server"
  tower_host:
    name: "awx.{{ infra_name }}"
    description: "awx Management"
    inventory: "vPloy"
    state: present
    tower_config_file: "../generated/tower_cli.cfg"
    variables: 
        ansible_host: "{{ network.private_range | ipaddr('address') | ipmath(2) }}"
        ansible_port: "22"
  register: host_awx

# Link Servers to groups
- name: "AWX {{ infra_name }} - Link Server to groups"
  shell:
    cmd: |
     TOWER_HOST="{{ tower_cli_url }}" \
     TOWER_USERNAME="admin" \
     TOWER_PASSWORD="{{ password.awx }}" \
     TOWER_VERIFY_SSL={{ tower_cli_verify_ssl }} \
     ~/.local/bin/tower-cli host associate --host "{{ host_group.host_id }}" --group "{{ host_group.group_id }}"
  loop_control:
    loop_var: host_group
  with_items:
    # vsphere group
    - group_id: "{{ group_vsphere.id }}"
      host_id: "{{ host_gateway.id }}"
    - group_id: "{{ group_vsphere.id }}"
      host_id: "{{ host_bastion.id }}"
    - group_id: "{{ group_vsphere.id }}"
      host_id: "{{ host_awx.id }}"
    # infra group
    - group_id: "{{ group_infra.id }}"
      host_id: "{{ host_gateway.id }}"
    - group_id: "{{ group_infra.id }}"
      host_id: "{{ host_bastion.id }}"
    - group_id: "{{ group_infra.id }}"
      host_id: "{{ host_awx.id }}"
    # gateway group
    - group_id: "{{ group_gateway.id }}"
      host_id: "{{ host_gateway.id }}"
    # bastion group
    - group_id: "{{ group_bastion.id }}"
      host_id: "{{ host_bastion.id }}"
    # awx group
    - group_id: "{{ group_awx.id }}"
      host_id: "{{ host_awx.id }}"